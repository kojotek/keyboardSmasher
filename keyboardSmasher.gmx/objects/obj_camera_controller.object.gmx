<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_camera</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>origin_path = 0;
segment_number = 0;
segments[0] = 0;
stop = false;
shake_x = 0;
shake_y = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (i=0; i&lt;array_length_1d(path_controllers);i++){
    path_delete(segments[i].path);
    with (segments[i]){
        instance_destroy();
   }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!stop){
    if (global.room_controller.beats &gt;= segments[segment_number].end_beat){
        path_end();
        segment_number++;
        path_start(segments[segment_number].path,0,1,true);
        path_position = 0;
    }
    
    path_position = (global.room_controller.beats - segments[segment_number].start_beat) / (segments[segment_number].end_beat - segments[segment_number].start_beat);

    view_xview[0] = x - view_wview[0]/2;
    view_yview[0] = y - view_hview[0]/2;
}

if (shake_x &gt; 0 || shake_y &gt; 0){
    var dir = choose(0,1);
    if (dir &amp;&amp; shake_x &gt; 0){
        view_xview[0] = x - view_wview[0]/2 - choose(1,-1) * shake_x;
        shake_x--;
    }
    if (!dir &amp;&amp; shake_y &gt; 0){
        view_yview[0] = y - view_hview[0]/2 - choose(1,-1) * shake_y;
        shake_y--;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (i=0; i&lt;path_get_number(path)-1;i++){
    segments[i] = instance_create(0,0, obj_path_controller);
    segments[i].path = path_add();
    path_add_point(segments[i].path, path_get_point_x(path, i), path_get_point_y(path, i), 0);
    path_add_point(segments[i].path, path_get_point_x(path, i+1), path_get_point_y(path, i+1), 0);
    path_set_closed(segments[i].path, false);
    path_set_kind(segments[i].path, 0);
    path_set_precision(segments[i].path, 1);
    if (i == 0){
        segments[i].start_beat = 0;
        segments[i].end_beat = segments[i].start_beat + path_get_point_speed(path, i+1);
    }
    else{
        segments[i].start_beat = segments[i-1].end_beat;
        segments[i].end_beat = segments[i].start_beat + path_get_point_speed(path, i+1);
    }
}

path_start(segments[segment_number].path,0,1,true);
path_position = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
